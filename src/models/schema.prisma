generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

model Employee {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  role       Role
  password   String
  attendance Attendance[]
  leaves     Leave[]
  payroll    Payroll[]
  reviews    Review[]
  tasks      Task[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Task {
  id          Int      @id @default(autoincrement())
  employeeId  Int
  title       String
  description String?
  dueDate     DateTime
  status      String   @default("Pending")
  employee    Employee @relation(fields: [employeeId], references: [id])
}

model Payroll {
  id          Int      @id @default(autoincrement())
  employeeId  Int
  baseSalary  Float
  bonuses     Float    @default(0)
  deductions  Float    @default(0)
  totalSalary Float
  createdAt   DateTime @default(now())
  employee    Employee @relation(fields: [employeeId], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  employeeId Int
  review     String
  rating     Int
  createdAt  DateTime @default(now())
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Attendance {
  id         Int      @id @default(autoincrement())
  employeeId Int
  date       DateTime
  status     String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Leave {
  id         Int      @id @default(autoincrement())
  employeeId Int
  startDate  DateTime
  endDate    DateTime
  reason     String
  status     String   @default("Pending")
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
